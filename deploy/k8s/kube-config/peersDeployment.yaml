---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mymarket-orderer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orderer
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:1.4.0
        command: ["sh", "-c", "sleep 5 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; orderer"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /shared/ledger/orderer
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "10"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: solo
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "31010"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/mymarket.com/orderers/orderer.mymarket.com/msp
        - name: ORDERER_GENERAL_LOCALMSPID
          value: HeadquaterMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/genesis.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "false"
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: store1-ca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: store1-ca
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; fabric-ca-server start -b admin:adminpw -d"]
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "Store1CA"
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/peerOrganizations/store1.mymarket.com/ca/ca.store1.mymarket.com-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/peerOrganizations/store1.mymarket.com/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: store2-ca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: store2-ca
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; fabric-ca-server start -b admin:adminpw -d"]
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "Store2CA"
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/peerOrganizations/store2.mymarket.com/ca/ca.store2.mymarket.com-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/peerOrganizations/store2.mymarket.com/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mymarket-ca
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mymarket-ca
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; fabric-ca-server start -b admin:adminpw -d"]
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "HQCA"
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/ordererOrganizations/mymarket.com/ca/ca.mymarket.com-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/ordererOrganizations/mymarket.com/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        - name: GODEBUG
          value: "netdns=go"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: store1peer0
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: store1peer0
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock
      containers:
      - name: store1peer0
        image: hyperledger/fabric-peer:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: dev
        - name: CORE_PEER_ID
          value: store1peer0
        - name: CORE_PEER_ADDRESS
          value: store1peer0:30110
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30110
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30111
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: store1peer1:30120
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_PEER_LOCALMSPID
          value: Store1MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/store1.mymarket.com/users/Admin@store1.mymarket.com/msp
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: mymarket-orderer:31010
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: store1peer1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: store1peer1
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock
      containers:
      - name: store1peer1
        image: hyperledger/fabric-peer:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: dev
        - name: CORE_PEER_ID
          value: store1peer1
        - name: CORE_PEER_ADDRESS
          value: store1peer1:30120
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30120
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30121
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: store1peer0:30110
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_PEER_LOCALMSPID
          value: Store1MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/store1.mymarket.com/users/Admin@store1.mymarket.com/msp
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: mymarket-orderer:31010
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: store2peer0
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: store2peer0
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock
      containers:
      - name: store2peer0
        image: hyperledger/fabric-peer:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: dev
        - name: CORE_PEER_ID
          value: store2peer0
        - name: CORE_PEER_ADDRESS
          value: store2peer0:30210
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30210
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30211
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: store2peer1:30220
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_PEER_LOCALMSPID
          value: Store2MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/store2.mymarket.com/users/Admin@store2.mymarket.com/msp
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: mymarket-orderer:31010
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: store2peer1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: store2peer1
    spec:
      volumes:
      - name: sharedvolume
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock
      containers:
      - name: store2peer1
        image: hyperledger/fabric-peer:1.4.0
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/status_configtxgen_complete ]; do echo Waiting for configtxgen; sleep 1; done; peer node start"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "true"
        - name: CORE_PEER_NETWORKID
          value: dev
        - name: CORE_PEER_ID
          value: store2peer1
        - name: CORE_PEER_ADDRESS
          value: store2peer1:30220
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:30220
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:30221
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: store2peer0:30210
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_PEER_LOCALMSPID
          value: Store2MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/store2.mymarket.com/users/Admin@store2.mymarket.com/msp
        - name: FABRIC_LOGGING_SPEC
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: FABRIC_CFG_PATH
          value: /etc/hyperledger/fabric/
        - name: ORDERER_URL
          value: mymarket-orderer:31010
        - name: GODEBUG
          value: "netdns=go"
        - name: CORE_VM_DOCKER_ATTACHSTDOUT
          value: "true"
        volumeMounts:
        - mountPath: /shared
          name: sharedvolume
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
